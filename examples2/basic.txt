union List begin
  Nil[];
  Cons[Promise*(Int), List]
end

func writeToAll(l: List, v: Int): Unit begin
  match l begin
    Nil[] -> ()
    -- Bug: we can't reuse the name l for the same variable here with linear typing enabled
    -- this shouldn't be hard to fix with something like SSA but I'm lazy
    Cons[p, l] ->
      p <- v;
      writeToAll(l, addInt(v, 1))
  end
end

func buildList(v: Int): List begin
  if eqInt(v, 0) then
    Nil[]
  else
    promise r, w: Int in
    Cons[w, buildList(addInt(v, -1))]
  end
end

func main(): Unit begin
  promise r, w: Int in
  w <- 5;
  if eqInt(?r, 5) then -- Error if we reuse p here, since p has been 'moved'
    writeToAll(buildList(10), 0)
  else
    writeToAll(buildList(5), 0)
  end
end
